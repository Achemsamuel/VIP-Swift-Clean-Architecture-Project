//
//  LandingModels.swift
//  VIPTest
//
//  Created by Achem Samuel on 2/17/20.
//  Copyright (c) 2020 Achem Samuel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Landing
{
    
    //MARK: Global viewModel
    //This is a collation of all the sub-viewModels from our various use cases. This is sorely for the viewController's use.
    struct ViewModel {
        var userVM = UserViewModel()
    }
    
    // MARK: Use cases
    //Here you define your enums for each use case in your scene. Each network request or process should have three structures
    // -Request: This houses the request parameters for your request
    // -Response: This structure comprises the response from your api call, database call or whatever method call you make
    // - Model: This houses the viewModels which you would need to send to the viewController's display logic to be displayed to the user
    enum fetchDataOnLoad {
        struct Request {
            //can be used by viewcontroller
            //can be used by interactor
            var id: String
        }
        
        struct Response {
            //Presenter recieves this data and converts to viewModel
            var user: user
        }
        
        struct ViewModel {
            //ViewController takes this and displays to the user
            var userViewModel: UserViewModel = UserViewModel()
        }
    }
}
